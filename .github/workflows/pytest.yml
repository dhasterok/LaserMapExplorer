# .github/workflows/pytest.yml
name: Run tests

on:
  push:
    branches:
      - test-github-actions
  pull_request:
    branches:
      - test-github-actions

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DISPLAY: ':99.0'
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 x11-utils
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: 3.11
        channels: conda-forge  # Add conda-forge channel

    - name: Install dependencies
      run: |
        conda create --name pyqt python=3.11 -y
        conda init bash
        source ~/.bashrc
        conda activate pyqt
        conda install -y pyqt pyqtgraph PyQtWebEngine pandas matplotlib scikit-learn scikit-learn-extra openpyxl numexpr pytest pytest-qt pytest-mock
        conda install -y conda-forge/label/cf201901::scikit-fuzzy
        python -m pip install --upgrade pip
        pip install darkdetect cmcrameri rst2pdf opencv-python-headless
    - name: Run tests
      run: |
        source ~/.bashrc
        conda activate pyqt
        pytest --junitxml=reports/junit.xml

    - name: Publish test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: reports/junit.xml

    - name: Test Summary
      uses: test-summary/action@v2
      with:
        paths: reports/junit.xml
      if: always()